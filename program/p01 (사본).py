# p01-1-sum.py

# 1부터 n까지 연속한 숫자의 합 구하기
# 입력 : n
# 출력 : 1부터 n까지의 합

def sum(n) :
    sum = 0
    for i in range (1, n+1) :
        sum += i
    return sum

print(sum(10))
print(sum(100))

# p01-2-sum.py

# 1부터 n까지의 합의 공식을 사용한 방법
# 입력 : n
# 출력 : 1부터 n까지의 합

def sum(n) :
    sum = n*(n+1)/2
    return sum

print(sum(10))
print(sum(100))


# 계산 복잡도
# - 시간 복잡도 : O(n)과 같이 얼마나 오랜 시간이 걸리는지 분석
# - 공간 복잡도 : 어떤 알고리즘을 수행하는데 얼마나 많은 메모리를 사용하는지 분석


# 연습문제

# 1-1
# 1부터 n까지의 연속한 숫자의 제곱의 합 구하는 프로그램 - for 반복문을 사용하여
# 입력 : n
# 출력 : 1부터 n까지의 연속한 숫자의 제곱의 합

def pro1(n) : 
    sum = 0
    for i in range(1, n+1):
        sum += i*i
    return sum

print(pro1(10))

# 1-2
# 연습 문제 1-1의 계산 복잡도는?

# O(n)이다. n이 증가할수록 계산의 횟수도 증가하기 때문에.

# 1-3
# 1부터 n까지 연속한 숫자의 제곱의 합을 구하는 공식을 사용하면 O(1)과 O(n)중 어느거?

# O(1)이다. 공식을 사용하면 덧셈 2번, 곱셈 3번, 나눗셈 1번만 하면 끝나므로 n이 증가한다고 계산 횟수가 증가하지는 않는다. 
